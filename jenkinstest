node {

stage('Clone repository') {
  checkout scm       
}

// Comentado porque no usamos twistcli
//stage('Download latest twistcli') {
//  withCredentials([usernamePassword(credentialsId: 'twistlock_creds', passwordVariable: 'TL_PASS', usernameVariable: 'TL_USER')]) {
//    sh 'curl -k -u $TL_USER:$TL_PASS --output ./twistcli https://$TL_CONSOLE/api/v1/util/twistcli'
//    sh 'sudo chmod a+x ./twistcli'
//  }
//}


// Comentado porque no funciona para el pipeline
//stage('Check image Git dependencies with twistcli') {
//  echo 'Twistcli scanning...'
//  withCredentials([usernamePassword(credentialsId: 'twistlock_creds', passwordVariable: 'TL_PASS', usernameVariable: 'TL_USER')]) {
//    sh "./twistcli coderepo scan --u $TL_USER --p $TL_PASS --address https://$TL_CONSOLE  . --repository evilpetclinic --details "
//  }
//  echo 'Twistcli scanning finished...'
//}
 
stage('Check image Git dependencies with jenkins plugin') {
  try {
    echo 'Jenkins pluging scanning...'
    withCredentials([usernamePassword(credentialsId: 'twistlock_creds', passwordVariable: 'TL_PASS', usernameVariable: 'TL_USER')]) {
      prismaCloudScanCode excludedPaths: '', explicitFiles: '', logLevel: 'debug', pythonVersion: '', repositoryName: 'evil.petclinic', repositoryPath: '.', resultsFile: 'prisma-cloud-scan-results.json'
    }         
    echo 'Jenkins plugin scanning finished...'
  } finally {
    prismaCloudPublish resultsFilePattern: 'prisma-cloud-scan-results.json'
  }  
} 
 
//stage('Sandboxing image with twistcli') {
//  sh 'docker pull rbenavente/evilpetclinic:latest'  
//  withCredentials([usernamePassword(credentialsId: 'twistlock_creds', passwordVariable: 'TL_PASS', usernameVariable: 'TL_USER')]) {
//    sh "sudo ./twistcli sandbox --u $TL_USER --p $TL_PASS --address https://$TL_CONSOLE --analysis-duration 2m  --output-file sandbox_out.json rbenavente/evilpetclinic:latest"
//  }      
//}
 
// Comentado por no duplicar Scan image - Utilizando solo Jenkins 
//stage('Scan image with twistcli') {
//  sh 'docker pull rbenavente/evilpetclinic:latest'  
//  withCredentials([usernamePassword(credentialsId: 'twistlock_creds', passwordVariable: 'TL_PASS', usernameVariable: 'TL_USER')]) {
//    sh "./twistcli images scan --u $TL_USER --p $TL_PASS --address https://$TL_CONSOLE --details rbenavente/evilpetclinic:latest --ci-results-file prisma-cloud-image-scan-results.json"
//    prismaCloudPublish resultsFilePattern: 'prisma-cloud-image-scan-results.json'
//  }      
//}
        
stage('Scan image with jenkins plugin') {
  try {
    sh 'docker pull rbenavente/evilpetclinic:latest'  
    withCredentials([usernamePassword(credentialsId: 'twistlock_creds', passwordVariable: 'TL_PASS', usernameVariable: 'TL_USER')]) {
      prismaCloudScanImage ca: '', cert: '', dockerAddress: 'unix:///var/run/docker.sock', ignoreImageBuildTime: true, image: 'rbenavente/evilpetclinic:latest', key: '', logLevel: 'debug', podmanPath: '', project: '', resultsFile: 'prisma-cloud-scan-results.json'
    }
    } finally {
      prismaCloudPublish resultsFilePattern: 'prisma-cloud-scan-results.json'
    }
  }
}
