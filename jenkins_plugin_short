node {

stage('Clone repository') {
  checkout scm       
}
 
stage('Check image Git dependencies with jenkins plugin') {
  try {
    echo 'Jenkins pluging scanning...'
    withCredentials([usernamePassword(credentialsId: 'twistlock_creds', passwordVariable: 'TL_PASS', usernameVariable: 'TL_USER')]) {
      prismaCloudScanCode excludedPaths: '', explicitFiles: '', logLevel: 'debug', pythonVersion: '', repositoryName: 'evil.petclinic', repositoryPath: '.', resultsFile: 'prisma-cloud-scan-results.json'
    }         
    echo 'Jenkins plugin scanning finished...'
  } finally {
    prismaCloudPublish resultsFilePattern: 'prisma-cloud-scan-results.json'
  }  
} 
 
//stage('Sandboxing image with twistcli') {
//  sh 'docker pull demiguelmoreno/evilpetclinic:latest'  
//  withCredentials([usernamePassword(credentialsId: 'twistlock_creds', passwordVariable: 'TL_PASS', usernameVariable: 'TL_USER')]) {
//    sh "sudo ./twistcli sandbox -u $TL_USER -p $TL_PASS --address https://$TL_CONSOLE --analysis-duration 2m  --output-file sandbox_out.json demiguelmoreno/evilpetclinic:latest"
//  }      
//}
         
stage('Scan image with jenkins plugin') {
  try {
    sh 'docker pull demiguelmoreno/evilpetclinic:latest'  
    withCredentials([usernamePassword(credentialsId: 'twistlock_creds', passwordVariable: 'TL_PASS', usernameVariable: 'TL_USER')]) {
      prismaCloudScanImage ca: '', cert: '', dockerAddress: 'unix:///var/run/docker.sock', ignoreImageBuildTime: true, image: 'demiguelmoreno/evilpetclinic:latest', key: '', logLevel: 'debug', podmanPath: '', project: '', resultsFile: 'prisma-cloud-scan-results.json'
    }
    } finally {
      prismaCloudPublish resultsFilePattern: 'prisma-cloud-scan-results.json'
    }
  }
}
